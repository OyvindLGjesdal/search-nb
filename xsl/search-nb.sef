<?xml version="1.0" encoding="utf-8"?>
<package xmlns="http://ns.saxonica.com/xslt/export" xmlns:fn="http://www.w3.org/2005/xpath-functions" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:vv="http://saxon.sf.net/generated-variable" xmlns:java-type="http://saxon.sf.net/java-type" version="30" packageVersion="1" saxonVersion="9.8.0.12" target="JS" targetVersion="1" relocatable="true">
 <co id="0" vis="PUBLIC" binds="">
  <globalParam name="Q{}itemsPerPage" type="xs:integer" line="16" module="search-nb.xsl" visibility="PUBLIC" jsAcceptor="return SaxonJS.U.Atomic.integer.cast(val);" jsCardCheck="function c(n) {return n==1;};">
   <int val="20"/>
  </globalParam>
 </co>
 <co id="1" binds="2 2 2 2">
  <function name="Q{http://data.ub.uib.no/ns/function-library}cors-uri" line="55" module="saxon-js-utils.xsl" eval="7" flags="pU" as="xs:anyURI" slots="2">
   <arg name="uri" as="xs:string"/>
   <let role="body" ns="xsl=~ ixsl=~ flub=http://data.ub.uib.no/ns/function-library xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="57" var="proxy-uri" as="document-node()" slot="1" eval="7">
    <doc line="58" validation="preserve">
     <iterate>
      <ifCall role="select" name="Q{http://www.w3.org/2005/xpath-functions/map}keys" type="xs:anyAtomicType*">
       <gVarRef name="Q{}cors-proxied-uris" bSlot="0"/>
      </ifCall>
      <params role="params"/>
      <choose role="action" line="59">
       <fn name="starts-with">
        <varRef name="uri" slot="0"/>
        <treat as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="0|1||fn:starts-with">
         <cvUntyped to="xs:string">
          <dot type="xs:anyAtomicType"/>
         </cvUntyped>
        </treat>
       </fn>
       <sequence line="60">
        <dot type="xs:anyAtomicType"/>
        <break/>
       </sequence>
      </choose>
     </iterate>
    </doc>
    <treat line="66" as="xs:anyURI" jsTest="return SaxonJS.U.Atomic.anyURI.matches(item);" diag="5|0|XTTE0780|flub:cors-uri">
     <check card="1" diag="5|0|XTTE0780|flub:cors-uri">
      <cvUntyped to="xs:anyURI">
       <sequence>
        <choose>
         <fn name="not">
          <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
           <gVarRef name="Q{}cors-proxied-uris" bSlot="1"/>
           <data>
            <varRef name="proxy-uri" slot="1"/>
           </data>
          </ifCall>
         </fn>
         <data line="67">
          <message>
           <sequence role="select">
            <varRef name="uri" slot="0"/>
            <str val=" not f ound in $cors-proxied-uris map."/>
            <fn name="string-join">
             <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}keys" type="xs:anyAtomicType*">
              <gVarRef name="Q{}cors-proxied-uris" bSlot="2"/>
             </ifCall>
             <str val=", "/>
            </fn>
            <str val="Add a map entry to $cors-proxied-uris"/>
           </sequence>
           <str role="terminate" val="yes"/>
           <str role="error" val="Q{http://www.w3.org/2005/xqt-errors}XTMM9000"/>
          </message>
         </data>
        </choose>
        <cast line="70" as="xs:anyURI" emptiable="0">
         <fn name="concat">
          <ifCall name="Q{http://www.w3.org/2005/xpath-functions/map}get" type="item()*">
           <gVarRef name="Q{}cors-proxied-uris" bSlot="3"/>
           <data>
            <varRef name="proxy-uri" slot="1"/>
           </data>
          </ifCall>
          <fn name="substring-after">
           <varRef name="uri" slot="0"/>
           <cvUntyped to="xs:string">
            <data>
             <varRef name="proxy-uri" slot="1"/>
            </data>
           </cvUntyped>
          </fn>
         </fn>
        </cast>
       </sequence>
      </cvUntyped>
     </check>
    </treat>
   </let>
  </function>
 </co>
 <co id="3" vis="PUBLIC" binds="">
  <globalParam name="Q{}mediatype" type="item()*" line="17" module="search-nb.xsl" visibility="PUBLIC" jsAcceptor="return val;" jsCardCheck="function c() {return true;};">
   <str val="bÃ¸ker"/>
  </globalParam>
 </co>
 <co id="4" vis="PUBLIC" binds="">
  <globalParam name="Q{}digitized" type="item()*" line="18" module="search-nb.xsl" visibility="PUBLIC" jsAcceptor="return val;" jsCardCheck="function c() {return true;};">
   <str val="True"/>
  </globalParam>
 </co>
 <co id="5" binds="6 1 0 3 4 6">
  <mode name="Q{http://saxonica.com/ns/interactiveXSLT}onclick" onNo="TC" flags="W" patternSlots="0">
   <templateRule prec="1" prio="0.5" seq="1" rank="0" minImp="0" slots="1" flags="s" line="47" module="search-nb.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="element(Q{}button)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===''&amp;&amp;q.local==='button';"/>
     <gc ns="xsl=~ flub=http://data.ub.uib.no/ns/function-library nb=http://www.nb.no/xml/search/1.0/ opensearch=http://a9.com/-/spec/opensearch/1.1/ ixsl=~ xs=~ saxon=~ math=http://www.w3.org/2005/xpath-functions/math atom=http://www.w3.org/2005/Atom map=http://www.w3.org/2005/xpath-functions/map xhtml=http://www.w3.org/1999/xhtml" line="47" op="=" card="1:1" comp="CCC">
      <attVal name="Q{}name" chk="0"/>
      <str val="button-search"/>
     </gc>
    </p.withPredicate>
    <let role="action" ns="xsl=~ flub=http://data.ub.uib.no/ns/function-library nb=http://www.nb.no/xml/search/1.0/ opensearch=http://a9.com/-/spec/opensearch/1.1/ ixsl=~ xs=~ saxon=~ math=http://www.w3.org/2005/xpath-functions/math atom=http://www.w3.org/2005/Atom map=http://www.w3.org/2005/xpath-functions/map xhtml=http://www.w3.org/1999/xhtml" line="48" var="search-string" as="item()*" slot="0" eval="8">
     <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}get" type="item()*">
      <check card="?" diag="0|0||ixsl:get">
       <fn name="id">
        <str val="search-field1"/>
        <check card="1" diag="0|1||fn:id">
         <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}page" type="document-node()?"/>
        </check>
       </fn>
      </check>
      <str val="value"/>
     </ifCall>
     <sequence line="52">
      <message>
       <sequence role="select">
        <str val="button button search click"/>
        <varRef name="search-string" slot="0"/>
       </sequence>
       <str role="terminate" val="no"/>
       <str role="error" val="Q{http://www.w3.org/2005/xqt-errors}XTMM9000"/>
      </message>
      <choose line="54">
       <fn name="string">
        <check card="?" diag="0|0||fn:string">
         <varRef name="search-string" slot="0"/>
        </check>
       </fn>
       <ufCall line="56" name="Q{http://data.ub.uib.no/ns/function-library}async-request" tailCall="false" bSlot="0" eval="7 0 0">
        <ufCall name="Q{http://data.ub.uib.no/ns/function-library}cors-uri" tailCall="false" bSlot="1" eval="8">
         <cvUntyped line="49" to="xs:string">
          <cast as="xs:untypedAtomic" emptiable="0">
           <fn name="concat">
            <str val="https://www.nb.no/services/search/v2/search?q="/>
            <fn name="encode-for-uri">
             <fn name="string">
              <check card="?" diag="0|0||fn:string">
               <varRef name="search-string" slot="0"/>
              </check>
             </fn>
            </fn>
            <str val="&amp;itemsPerPage="/>
            <fn name="string">
             <gVarRef name="Q{}itemsPerPage" bSlot="2"/>
            </fn>
            <str val="&amp;fq=mediatype:"/>
            <fn name="string-join">
             <convert from="xs:anyAtomicType" to="xs:string">
              <data>
               <mergeAdj>
                <gVarRef name="Q{}mediatype" bSlot="3"/>
               </mergeAdj>
              </data>
             </convert>
             <str val=" "/>
            </fn>
            <str val="&amp;fq=digital="/>
            <fn name="string-join">
             <convert from="xs:anyAtomicType" to="xs:string">
              <data>
               <mergeAdj>
                <gVarRef name="Q{}digitized" bSlot="4"/>
               </mergeAdj>
              </data>
             </convert>
             <str val=" "/>
            </fn>
           </fn>
          </cast>
         </cvUntyped>
        </ufCall>
        <str val="result"/>
        <str val="basic-result"/>
       </ufCall>
      </choose>
     </sequence>
    </let>
   </templateRule>
   <templateRule prec="1" prio="0.5" seq="0" rank="0" minImp="0" slots="1" flags="s" line="36" module="search-nb.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="element(Q{}button)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===''&amp;&amp;q.local==='button';"/>
     <and ns="xsl=~ flub=http://data.ub.uib.no/ns/function-library nb=http://www.nb.no/xml/search/1.0/ opensearch=http://a9.com/-/spec/opensearch/1.1/ ixsl=~ xs=~ saxon=~ math=http://www.w3.org/2005/xpath-functions/math atom=http://www.w3.org/2005/Atom map=http://www.w3.org/2005/xpath-functions/map xhtml=http://www.w3.org/1999/xhtml" line="36" op="and">
      <or op="or">
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}name" chk="0"/>
        <str val="next-result"/>
       </gc>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{}name" chk="0"/>
        <str val="previous-result"/>
       </gc>
      </or>
      <fn name="empty">
       <axis name="attribute" nodeTest="attribute(Q{}disabled)" jsTest="return item.name==='disabled'"/>
      </fn>
     </and>
    </p.withPredicate>
    <let role="action" ns="xsl=~ flub=http://data.ub.uib.no/ns/function-library nb=http://www.nb.no/xml/search/1.0/ opensearch=http://a9.com/-/spec/opensearch/1.1/ ixsl=~ xs=~ saxon=~ math=http://www.w3.org/2005/xpath-functions/math atom=http://www.w3.org/2005/Atom map=http://www.w3.org/2005/xpath-functions/map xhtml=http://www.w3.org/1999/xhtml" line="40" var="action" as="xs:anyURI?" slot="0" eval="7">
     <cast as="xs:anyURI" emptiable="1">
      <atomSing card="?" diag="2|0||cast as">
       <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}get" type="item()*">
        <check card="?" diag="0|0||ixsl:get">
         <fn name="id">
          <str val="result"/>
          <check card="1" diag="0|1||fn:id">
           <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}page" type="document-node()?"/>
          </check>
         </fn>
        </check>
        <choose>
         <gc op="=" card="1:1" comp="CCC">
          <attVal name="Q{}name" chk="0"/>
          <str val="next-result"/>
         </gc>
         <str val="next"/>
         <true/>
         <str val="previous"/>
        </choose>
       </ifCall>
      </atomSing>
     </cast>
     <sequence line="42">
      <message>
       <fn role="select" name="concat">
        <str val="action:"/>
        <varRef name="action" slot="0"/>
       </fn>
       <str role="terminate" val="no"/>
       <str role="error" val="Q{http://www.w3.org/2005/xqt-errors}XTMM9000"/>
      </message>
      <ufCall line="44" name="Q{http://data.ub.uib.no/ns/function-library}async-request" tailCall="false" bSlot="5" eval="7 0 0">
       <check card="1" diag="0|0||flub:async-request">
        <varRef name="action" slot="0"/>
       </check>
       <str val="result"/>
       <str val="basic-result"/>
      </ufCall>
     </sequence>
    </let>
   </templateRule>
  </mode>
 </co>
 <co id="2" binds="">
  <globalVariable name="Q{}cors-proxied-uris" type="map(xs:string, xs:string)" line="22" module="search-nb.xsl" visibility="PRIVATE" jsAcceptor="if (typeof val == 'object') {return val;} else {throw SaxonJS.XError('Cannot convert supplied JS value to a map or array');}" jsCardCheck="function c(n) {return n==1;};">
   <map size="2">
    <str val="https://www.nb.no/services/search/"/>
    <str val="https://158.39.77.227/nb-search/"/>
    <str val="http://www.nb.no/services/search/"/>
    <str val="https://www.nb.no/services/search/"/>
   </map>
  </globalVariable>
 </co>
 <co id="7" binds="8">
  <mode name="Q{}callback" onNo="TC" flags="W" patternSlots="0">
   <templateRule prec="1" prio="-0.5" seq="1" rank="1" minImp="0" slots="1" flags="s" line="112" module="search-nb.xsl">
    <p.nodeTest role="match" test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;"/>
    <sequence role="action" ns="xsl=~ flub=http://data.ub.uib.no/ns/function-library nb=http://www.nb.no/xml/search/1.0/ opensearch=http://a9.com/-/spec/opensearch/1.1/ ixsl=~ xs=~ saxon=~ math=http://www.w3.org/2005/xpath-functions/math atom=http://www.w3.org/2005/Atom map=http://www.w3.org/2005/xpath-functions/map xhtml=http://www.w3.org/1999/xhtml" line="113">
     <param name="Q{}callback-name" slot="0">
      <str role="select" val=""/>
      <supplied role="conversion" slot="0"/>
     </param>
     <choose line="115">
      <gc op="=" card="N:1" comp="GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint">
       <data>
        <varRef name="callback-name" slot="0"/>
       </data>
       <str val="cache"/>
      </gc>
      <message line="117">
       <fn role="select" name="concat">
        <fn name="base-uri">
         <dot type="element()"/>
        </fn>
        <str val=" added to cache"/>
       </fn>
       <str role="terminate" val="no"/>
       <str role="error" val="Q{http://www.w3.org/2005/xqt-errors}XTMM9000"/>
      </message>
      <gc line="120" op="=" card="N:1" comp="GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint">
       <data>
        <varRef name="callback-name" slot="0"/>
       </data>
       <str val="json-manifest"/>
      </gc>
      <message line="121">
       <fn role="select" name="concat">
        <str val="hello json"/>
        <slash>
         <axis name="self" nodeTest="node()" jsTest="return SaxonJS.U.isNode(item);"/>
         <fn name="name">
          <dot type="element()"/>
         </fn>
        </slash>
       </fn>
       <str role="terminate" val="no"/>
       <str role="error" val="Q{http://www.w3.org/2005/xqt-errors}XTMM9000"/>
      </message>
      <gc line="123" op="=" card="N:1" comp="GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint">
       <data>
        <varRef name="callback-name" slot="0"/>
       </data>
       <str val="basic-result"/>
      </gc>
      <applyT line="124" mode="Q{}basic-search" flags="t" bSlot="0">
       <first role="select">
        <axis name="descendant-or-self" nodeTest="element(Q{http://www.w3.org/2005/Atom}feed)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/Atom'&amp;&amp;q.local==='feed';"/>
       </first>
      </applyT>
      <true/>
      <message line="127">
       <sequence role="select">
        <str val="callback-name: "/>
        <varRef name="callback-name" slot="0"/>
        <str val=" is not defined in mode transform-async"/>
       </sequence>
       <str role="terminate" val="yes"/>
       <str role="error" val="Q{http://www.w3.org/2005/xqt-errors}XTMM9000"/>
      </message>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="-0.5" seq="0" rank="0" minImp="0" slots="0" flags="s" line="16" module="saxon-js-utils.xsl">
    <p.nodeTest role="match" test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;"/>
    <message role="action" ns="xsl=~ ixsl=~ flub=http://data.ub.uib.no/ns/function-library xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="17">
     <str role="select" val="saxon-js-utils: template match =* mode callback must be implemented in importing stylesheet"/>
     <str role="terminate" val="yes"/>
     <str role="error" val="Q{http://www.w3.org/2005/xqt-errors}XTMM9000"/>
    </message>
   </templateRule>
  </mode>
 </co>
 <co id="9" binds="">
  <template name="Q{}initialTemplate" flags="os" line="30" module="search-nb.xsl" slots="0">
   <message role="body" ns="xsl=~ flub=http://data.ub.uib.no/ns/function-library nb=http://www.nb.no/xml/search/1.0/ opensearch=http://a9.com/-/spec/opensearch/1.1/ ixsl=~ xs=~ saxon=~ math=http://www.w3.org/2005/xpath-functions/math atom=http://www.w3.org/2005/Atom map=http://www.w3.org/2005/xpath-functions/map xhtml=http://www.w3.org/1999/xhtml" line="31">
    <str role="select" val="initial template"/>
    <str role="terminate" val="no"/>
    <str role="error" val="Q{http://www.w3.org/2005/xqt-errors}XTMM9000"/>
   </message>
  </template>
 </co>
 <co id="10" binds="">
  <globalVariable name="Q{}debug" type="xs:boolean" line="21" module="search-nb.xsl" visibility="PRIVATE" jsAcceptor="return SaxonJS.U.Atomic.boolean.cast(val);" jsCardCheck="function c(n) {return n==1;};">
   <true/>
  </globalVariable>
 </co>
 <co id="11" binds="7">
  <template name="Q{}async-transform" flags="os" line="75" module="saxon-js-utils.xsl" slots="4">
   <sequence role="body" ns="xsl=~ ixsl=~ flub=http://data.ub.uib.no/ns/function-library xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="76">
    <param name="Q{}doc-request" slot="0" flags="i" as="xs:anyURI">
     <treat role="conversion" as="xs:anyURI" jsTest="return SaxonJS.U.Atomic.anyURI.matches(item);" diag="8|0|XTTE0590|doc-request">
      <check card="1" diag="8|0|XTTE0590|doc-request">
       <cvUntyped to="xs:anyURI">
        <data>
         <supplied slot="0"/>
        </data>
       </cvUntyped>
      </check>
     </treat>
    </param>
    <param line="77" name="Q{}id" slot="1" flags="i" as="xs:ID">
     <treat role="conversion" as="xs:ID" jsTest="return SaxonJS.U.Atomic.ID.matches(item);" diag="8|0|XTTE0590|id">
      <check card="1" diag="8|0|XTTE0590|id">
       <cvUntyped to="xs:ID">
        <data>
         <supplied slot="1"/>
        </data>
       </cvUntyped>
      </check>
     </treat>
    </param>
    <param line="78" name="Q{}callback-name" slot="2" flags="i" as="xs:string">
     <treat role="conversion" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="8|0|XTTE0590|callback-name">
      <check card="1" diag="8|0|XTTE0590|callback-name">
       <cvUntyped to="xs:string">
        <data>
         <supplied slot="2"/>
        </data>
       </cvUntyped>
      </check>
     </treat>
    </param>
    <param line="79" name="Q{}method" slot="3">
     <str role="select" val=""/>
     <supplied role="conversion" slot="3"/>
    </param>
    <choose line="80">
     <fn name="empty">
      <fn name="id">
       <varRef name="id" slot="1"/>
       <check card="1" diag="0|1||fn:id">
        <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}page" type="document-node()?"/>
       </check>
      </fn>
     </fn>
     <message line="81">
      <fn role="select" name="concat">
       <str val="id: "/>
       <varRef name="id" slot="1"/>
       <str val=" not present in webpage"/>
      </fn>
      <str role="terminate" val="yes"/>
      <str role="error" val="Q{http://www.w3.org/2005/xqt-errors}XTMM9000"/>
     </message>
    </choose>
    <resultDoc line="85" global="#&#xA;#Sat Aug 11 10:19:50 CEST 2018&#xA;" local="#&#xA;#Sat Aug 11 10:19:50 CEST 2018&#xA;method={http\://saxonica.com/ns/interactiveXSLT}replace-content&#xA;">
     <fn role="href" name="concat">
      <str val="#"/>
      <varRef name="id" slot="1"/>
     </fn>
     <applyT role="content" line="90" mode="Q{}callback" bSlot="0">
      <slash role="select" simple="1">
       <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="1|0|XPTY0019|/">
        <choose line="88">
         <gc op="=" card="N:1" comp="GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint">
          <data>
           <varRef name="method" slot="3"/>
          </data>
          <str val="xml"/>
         </gc>
         <fn name="document">
          <varRef name="doc-request" slot="0"/>
         </fn>
         <gc op="=" card="N:1" comp="GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint">
          <data>
           <varRef name="method" slot="3"/>
          </data>
          <str val="json-text"/>
         </gc>
         <fn name="json-to-xml">
          <treat as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="0|0||fn:json-to-xml">
           <check card="?" diag="0|0||fn:json-to-xml">
            <cvUntyped to="xs:string">
             <data>
              <fn name="parse-json">
               <check card="1" diag="0|0||fn:parse-json">
                <fn name="unparsed-text">
                 <fn name="string">
                  <varRef name="doc-request" slot="0"/>
                 </fn>
                </fn>
               </check>
              </fn>
             </data>
            </cvUntyped>
           </check>
          </treat>
         </fn>
        </choose>
       </treat>
       <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
      </slash>
      <withParam name="Q{}callback-name" as="xs:string">
       <varRef line="91" name="callback-name" slot="2"/>
      </withParam>
      <withParam name="Q{}id" as="xs:ID">
       <varRef line="92" name="id" slot="1"/>
      </withParam>
     </applyT>
    </resultDoc>
   </sequence>
  </template>
 </co>
 <co id="12" binds="11">
  <function name="Q{http://data.ub.uib.no/ns/function-library}async-request" line="25" module="saxon-js-utils.xsl" eval="8" flags="pU" as="item()*" slots="4">
   <arg name="doc-request" as="xs:anyURI"/>
   <arg name="page-id" as="xs:string"/>
   <arg name="callback-name" as="xs:string"/>
   <arg name="method" as="xs:string"/>
   <sequence role="body" ns="xsl=~ ixsl=~ flub=http://data.ub.uib.no/ns/function-library xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="32">
    <message>
     <fn role="select" name="concat">
      <str val="flub:async-request: "/>
      <varRef name="doc-request" slot="0"/>
     </fn>
     <str role="terminate" val="no"/>
     <str role="error" val="Q{http://www.w3.org/2005/xqt-errors}XTMM9000"/>
    </message>
    <ifCall line="34" name="Q{http://saxonica.com/ns/interactiveXSLT}schedule-action" type="item()*">
     <int val="0"/>
     <convert from="xs:anyURI" to="xs:string">
      <varRef name="doc-request" slot="0"/>
     </convert>
     <callT line="35" name="async-transform" bSlot="0">
      <withParam name="Q{}doc-request" flags="c" as="xs:anyURI">
       <varRef line="36" name="doc-request" slot="0"/>
      </withParam>
      <withParam name="Q{}callback-name" flags="c" as="xs:string">
       <varRef line="37" name="callback-name" slot="2"/>
      </withParam>
      <withParam name="Q{}id" flags="c" as="xs:ID">
       <cast line="38" as="xs:ID" emptiable="0">
        <varRef name="page-id" slot="1"/>
       </cast>
      </withParam>
      <withParam name="Q{}method" flags="c" as="xs:string">
       <varRef line="39" name="method" slot="3"/>
      </withParam>
     </callT>
    </ifCall>
   </sequence>
  </function>
 </co>
 <co id="8" binds="1 1">
  <mode name="Q{}basic-search" onNo="TC" flags="W" patternSlots="0">
   <templateRule prec="1" prio="2.0" seq="1" rank="0" minImp="0" slots="0" flags="s" line="97" module="search-nb.xsl">
    <p.nodeTest role="match" test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;"/>
    <empty role="action"/>
   </templateRule>
   <templateRule prec="1" prio="3.0" seq="0" rank="1" minImp="0" slots="3" flags="s" line="60" module="search-nb.xsl">
    <p.nodeTest role="match" test="element(Q{http://www.w3.org/2005/Atom}feed)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/Atom'&amp;&amp;q.local==='feed';"/>
    <let role="action" ns="xsl=~ flub=http://data.ub.uib.no/ns/function-library nb=http://www.nb.no/xml/search/1.0/ opensearch=http://a9.com/-/spec/opensearch/1.1/ ixsl=~ xs=~ saxon=~ math=http://www.w3.org/2005/xpath-functions/math atom=http://www.w3.org/2005/Atom map=http://www.w3.org/2005/xpath-functions/map xhtml=http://www.w3.org/1999/xhtml" line="61" var="next" as="xs:anyURI?" slot="0" eval="7">
     <choose>
      <fn name="exists">
       <filter flags="b">
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/Atom}link)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/Atom'&amp;&amp;q.local==='link';"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}rel" chk="0"/>
         <str val="next"/>
        </gc>
       </filter>
      </fn>
      <ufCall name="Q{http://data.ub.uib.no/ns/function-library}cors-uri" tailCall="false" bSlot="0" eval="4">
       <check card="1" diag="0|0||flub:cors-uri">
        <cvUntyped to="xs:string">
         <data>
          <slash>
           <filter flags="b">
            <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/Atom}link)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/Atom'&amp;&amp;q.local==='link';"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}rel" chk="0"/>
             <str val="next"/>
            </gc>
           </filter>
           <axis name="attribute" nodeTest="attribute(Q{}href)" jsTest="return item.name==='href'"/>
          </slash>
         </data>
        </cvUntyped>
       </check>
      </ufCall>
     </choose>
     <sequence line="63">
      <message>
       <fn role="select" name="concat">
        <str val="next: "/>
        <varRef name="next" slot="0"/>
       </fn>
       <str role="terminate" val="no"/>
       <str role="error" val="Q{http://www.w3.org/2005/xqt-errors}XTMM9000"/>
      </message>
      <let line="65" var="previous" as="xs:anyURI?" slot="1" eval="7">
       <choose>
        <fn name="exists">
         <filter flags="b">
          <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/Atom}link)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/Atom'&amp;&amp;q.local==='link';"/>
          <gc op="=" card="1:1" comp="CCC">
           <attVal name="Q{}rel" chk="0"/>
           <str val="previous"/>
          </gc>
         </filter>
        </fn>
        <ufCall name="Q{http://data.ub.uib.no/ns/function-library}cors-uri" tailCall="false" bSlot="1" eval="4">
         <check card="1" diag="0|0||flub:cors-uri">
          <cvUntyped to="xs:string">
           <data>
            <slash>
             <filter flags="b">
              <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/Atom}link)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/Atom'&amp;&amp;q.local==='link';"/>
              <gc op="=" card="1:1" comp="CCC">
               <attVal name="Q{}rel" chk="0"/>
               <str val="previous"/>
              </gc>
             </filter>
             <axis name="attribute" nodeTest="attribute(Q{}href)" jsTest="return item.name==='href'"/>
            </slash>
           </data>
          </cvUntyped>
         </check>
        </ufCall>
       </choose>
       <sequence line="67">
        <elem name="div" nsuri="" namespaces="map ixsl xhtml saxon flub">
         <sequence>
          <att name="class" flags="l">
           <str val="container"/>
          </att>
          <elem line="68" name="span" nsuri="" flags="l">
           <valueOf flags="el">
            <fn name="concat">
             <str val="Resultat av sÃ¸ket: "/>
             <fn name="string-join">
              <convert from="xs:untypedAtomic" to="xs:string">
               <data>
                <axis name="child" nodeTest="element(Q{http://a9.com/-/spec/opensearch/1.1/}startIndex)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://a9.com/-/spec/opensearch/1.1/'&amp;&amp;q.local==='startIndex';"/>
               </data>
              </convert>
              <str val=" "/>
             </fn>
             <str val=" til "/>
             <fn name="string">
              <convert from="xs:integer" to="xs:string">
               <arith op="-" calc="i-i">
                <arith op="+" calc="i+i">
                 <cast as="xs:integer" emptiable="1">
                  <atomSing card="?" diag="2|0||cast as">
                   <axis name="child" nodeTest="element(Q{http://a9.com/-/spec/opensearch/1.1/}startIndex)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://a9.com/-/spec/opensearch/1.1/'&amp;&amp;q.local==='startIndex';"/>
                  </atomSing>
                 </cast>
                 <cast as="xs:integer" emptiable="1">
                  <atomSing card="?" diag="2|0||cast as">
                   <axis name="child" nodeTest="element(Q{http://a9.com/-/spec/opensearch/1.1/}itemsPerPage)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://a9.com/-/spec/opensearch/1.1/'&amp;&amp;q.local==='itemsPerPage';"/>
                  </atomSing>
                 </cast>
                </arith>
                <int val="1"/>
               </arith>
              </convert>
             </fn>
             <str val=" av "/>
             <fn name="string-join">
              <convert from="xs:untypedAtomic" to="xs:string">
               <data>
                <axis name="child" nodeTest="element(Q{http://a9.com/-/spec/opensearch/1.1/}totalResults)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://a9.com/-/spec/opensearch/1.1/'&amp;&amp;q.local==='totalResults';"/>
               </data>
              </convert>
              <str val=" "/>
             </fn>
            </fn>
           </valueOf>
          </elem>
          <elem line="70" name="div" nsuri="" flags="l">
           <sequence>
            <elem name="button" nsuri="" flags="l" namespaces="map ixsl xhtml saxon flub">
             <sequence>
              <att name="name" flags="l">
               <str val="previous-result"/>
              </att>
              <att name="class" flags="l">
               <str val="btn"/>
              </att>
              <choose line="71">
               <fn name="not">
                <varRef name="previous" slot="1"/>
               </fn>
               <att name="disabled" flags="l">
                <str val=""/>
               </att>
              </choose>
              <elem line="74" name="i" nsuri="" flags="l" namespaces="map ixsl xhtml saxon flub">
               <att name="class" flags="l">
                <str val="fas fa-arrow-left"/>
               </att>
              </elem>
             </sequence>
            </elem>
            <elem line="76" name="button" nsuri="" flags="l" namespaces="map ixsl xhtml saxon flub">
             <sequence>
              <att name="name" flags="l">
               <str val="next-result"/>
              </att>
              <att name="class" flags="l">
               <str val="btn"/>
              </att>
              <choose line="77">
               <fn name="not">
                <varRef name="next" slot="0"/>
               </fn>
               <att name="disabled" flags="l">
                <str val=""/>
               </att>
              </choose>
              <elem line="80" name="i" nsuri="" flags="l" namespaces="map ixsl xhtml saxon flub">
               <att name="class" flags="l">
                <str val="fas fa-arrow-right"/>
               </att>
              </elem>
             </sequence>
            </elem>
           </sequence>
          </elem>
          <let line="83" var="result-fragment" as="element()*" slot="2" eval="8">
           <fn name="id">
            <str val="result"/>
            <check card="1" diag="0|1||fn:id">
             <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}page" type="document-node()?"/>
            </check>
           </fn>
           <sequence line="84">
            <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}set-property" type="item()?">
             <str val="previous"/>
             <varRef name="previous" slot="1"/>
             <check card="1" diag="0|2||ixsl:set-property">
              <varRef name="result-fragment" slot="2"/>
             </check>
            </ifCall>
            <ifCall line="85" name="Q{http://saxonica.com/ns/interactiveXSLT}set-property" type="item()?">
             <str val="next"/>
             <varRef name="next" slot="0"/>
             <check card="1" diag="0|2||ixsl:set-property">
              <varRef name="result-fragment" slot="2"/>
             </check>
            </ifCall>
           </sequence>
          </let>
         </sequence>
        </elem>
        <elem line="88" name="div" nsuri="" namespaces="map ixsl xhtml saxon flub">
         <sequence>
          <att name="class" flags="l">
           <str val="list-group"/>
          </att>
          <att name="id" flags="l">
           <str val="basic-search-result"/>
          </att>
          <applyT line="89" flags="ci" bSlot="-1">
           <axis role="select" name="child" nodeTest="node()" jsTest="return true;"/>
          </applyT>
         </sequence>
        </elem>
        <comment line="93">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <copyOf flags="vc">
            <dot type="element(Q{http://www.w3.org/2005/Atom}feed)"/>
           </copyOf>
          </data>
         </convert>
        </comment>
       </sequence>
      </let>
     </sequence>
    </let>
   </templateRule>
   <templateRule prec="1" prio="3.0" seq="2" rank="1" minImp="0" slots="0" flags="s" line="99" module="search-nb.xsl">
    <p.nodeTest role="match" test="element(Q{http://www.w3.org/2005/Atom}entry)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/Atom'&amp;&amp;q.local==='entry';"/>
    <elem role="action" ns="xsl=~ flub=http://data.ub.uib.no/ns/function-library nb=http://www.nb.no/xml/search/1.0/ opensearch=http://a9.com/-/spec/opensearch/1.1/ ixsl=~ xs=~ saxon=~ math=http://www.w3.org/2005/xpath-functions/math atom=http://www.w3.org/2005/Atom map=http://www.w3.org/2005/xpath-functions/map xhtml=http://www.w3.org/1999/xhtml" line="100" name="li" nsuri="" namespaces="map ixsl xhtml saxon flub">
     <sequence>
      <att name="class" flags="l">
       <str val="list-group-item list-group-item-action flex-column align-items-start"/>
      </att>
      <elem line="101" name="div" nsuri="" flags="l">
       <sequence>
        <att name="class" flags="l">
         <str val="d-flex w-100 justify-content-between"/>
        </att>
        <elem line="102" name="h5" nsuri="" flags="l">
         <sequence>
          <att name="class" flags="l">
           <str val="mb-1"/>
          </att>
          <valueOf flags="el">
           <fn name="string-join">
            <convert from="xs:untypedAtomic" to="xs:string">
             <data>
              <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/Atom}title)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/Atom'&amp;&amp;q.local==='title';"/>
             </data>
            </convert>
            <str val=" "/>
           </fn>
          </valueOf>
         </sequence>
        </elem>
        <elem line="103" name="small" nsuri="" flags="l">
         <valueOf flags="el">
          <fn name="concat">
           <fn name="string-join">
            <convert from="xs:untypedAtomic" to="xs:string">
             <data>
              <axis name="child" nodeTest="element(Q{http://www.nb.no/xml/search/1.0/}namecreator)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.nb.no/xml/search/1.0/'&amp;&amp;q.local==='namecreator';"/>
             </data>
            </convert>
            <str val=" "/>
           </fn>
           <str val=" ("/>
           <fn name="string-join">
            <convert from="xs:anyAtomicType" to="xs:string">
             <data>
              <first>
               <sequence>
                <axis name="child" nodeTest="element(Q{http://www.nb.no/xml/search/1.0/}year)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.nb.no/xml/search/1.0/'&amp;&amp;q.local==='year';"/>
                <str val="Ikke oppgitt"/>
               </sequence>
              </first>
             </data>
            </convert>
            <str val=" "/>
           </fn>
           <str val=") "/>
          </fn>
         </valueOf>
        </elem>
       </sequence>
      </elem>
      <elem line="105" name="p" nsuri="" flags="l">
       <sequence>
        <att name="class" flags="l">
         <str val="mb-1"/>
        </att>
        <valueOf flags="el">
         <fn name="string-join">
          <convert from="xs:untypedAtomic" to="xs:string">
           <data>
            <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/Atom}summary)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/Atom'&amp;&amp;q.local==='summary';"/>
           </data>
          </convert>
          <str val=" "/>
         </fn>
        </valueOf>
       </sequence>
      </elem>
     </sequence>
    </elem>
   </templateRule>
  </mode>
 </co>
 <co id="6" binds="12">
  <function name="Q{http://data.ub.uib.no/ns/function-library}async-request" line="44" module="saxon-js-utils.xsl" eval="3" flags="pU" as="item()*" slots="3">
   <arg name="doc-request" as="xs:anyURI"/>
   <arg name="page-id" as="xs:string"/>
   <arg name="callback-name" as="xs:string"/>
   <sequence role="body" ns="xsl=~ ixsl=~ flub=http://data.ub.uib.no/ns/function-library xs=~ math=http://www.w3.org/2005/xpath-functions/math map=http://www.w3.org/2005/xpath-functions/map" line="50">
    <message>
     <fn role="select" name="concat">
      <str val="flub:async-request: "/>
      <varRef name="doc-request" slot="0"/>
     </fn>
     <str role="terminate" val="no"/>
     <str role="error" val="Q{http://www.w3.org/2005/xqt-errors}XTMM9000"/>
    </message>
    <ufCall line="52" name="Q{http://data.ub.uib.no/ns/function-library}async-request" tailCall="false" bSlot="0" eval="6 6 6 0">
     <varRef name="doc-request" slot="0"/>
     <varRef name="page-id" slot="1"/>
     <varRef name="callback-name" slot="2"/>
     <str val="xml"/>
    </ufCall>
   </sequence>
  </function>
 </co>
 <co id="13" binds="">
  <mode onNo="TC" flags="dWe" patternSlots="0"/>
 </co>
 <overridden/>
 <output>
  <property name="{http://saxon.sf.net/}stylesheet-version" value="30"/>
 </output>
 <decimalFormat/>
</package>
<?Î£ 28b1fe19?>
